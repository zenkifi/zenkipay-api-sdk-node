/**
 * Zenkipay API
 * Definition of technical specification of the product; Zenkipay is a gateway cryptocurrency payment system that allows merchant\'s to receive payments on their e-commerce portals. Unlike other platforms, Zenkipay ensures customer satisfaction through its payment process. guarantee deposit (delivered product and expected quality) to settle payment to the merchant, thus avoiding the loss of client assets due to online scams.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@zenki.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { TrackingExternalCourier } from './trackingExternalCourier';

export class Tracking {
    /**
    * Unique tracking identifier generated by Zenkipay.
    */
    'zenkiTrackingId': string;
    /**
    * Courier type used to deliver the product or service.  Possible values: * EXTERNAL - In case of using an existing courier company, it must be indicated that the shipment will be external and the trackingId field must be informed. * INTERNAL - In case of using the merchant\'s own infrastructure to make the shipment, it must be indicated that the shipment will be internal and the courierName field must be informed.
    */
    'courierType': Tracking.CourierTypeEnum;
    /**
    * Unique tracking identifier generated by a courier.
    */
    'trackingId'?: string | null;
    /**
    * Internal courier name of the merchant used to deliver the service or product.
    */
    'courierName'?: string | null;
    'externalCourier'?: TrackingExternalCourier;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "zenkiTrackingId",
            "baseName": "zenkiTrackingId",
            "type": "string"
        },
        {
            "name": "courierType",
            "baseName": "courierType",
            "type": "Tracking.CourierTypeEnum"
        },
        {
            "name": "trackingId",
            "baseName": "trackingId",
            "type": "string"
        },
        {
            "name": "courierName",
            "baseName": "courierName",
            "type": "string"
        },
        {
            "name": "externalCourier",
            "baseName": "externalCourier",
            "type": "TrackingExternalCourier"
        }    ];

    static getAttributeTypeMap() {
        return Tracking.attributeTypeMap;
    }
}

export namespace Tracking {
    export enum CourierTypeEnum {
        External = <any> 'EXTERNAL',
        Internal = <any> 'INTERNAL'
    }
}
