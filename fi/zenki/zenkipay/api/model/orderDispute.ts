/**
 * Zenkipay API
 * Definition of technical specification of the product; Zenkipay is a gateway cryptocurrency payment system that allows merchant\'s to receive payments on their e-commerce portals. Unlike other platforms, Zenkipay ensures customer satisfaction through its payment process. guarantee deposit (delivered product and expected quality) to settle payment to the merchant, thus avoiding the loss of client assets due to online scams.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@zenki.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Process of a dispute detail.
*/
export class OrderDispute {
    /**
    * Dispute current status.  Possible values: * OPEN     - The dispute process has started. * REFUND   - The dispute process has been closed and a partial or full refund of the full amount of the order has been made. * RESOLVED - The dispute process has been closed without making any refund movement to the buyer.
    */
    'status': OrderDispute.StatusEnum;
    /**
    * Date and time the dispute started, in milliseconds and UTC format.      The Unix epoch (or Unix time or POSIX time or Unix timestamp) is the number of seconds elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (in ISO 8601: 1970-01-01T00: 00:00Z)
    */
    'createdAt': number;
    /**
    * Support type requested from Zenki staff.  Possible values: * REQUEST_REFUND      - Request for support from Zenki staff to make a refund. * REQUEST_CONCILIATED - Request to Zenki staff to reconcile dispute between buyer and merchant.
    */
    'resolutionRequestType'?: OrderDispute.ResolutionRequestTypeEnum;
    /**
    * Date and time in which the dispute was finalized and a final resolution of the process was given to the buyer, in milliseconds and UTC format.      The Unix epoch (or Unix time or POSIX time or Unix timestamp) is the number of seconds elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (in ISO 8601: 1970-01-01T00: 00:00Z)
    */
    'resolutionRequestAt'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "status",
            "baseName": "status",
            "type": "OrderDispute.StatusEnum"
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "number"
        },
        {
            "name": "resolutionRequestType",
            "baseName": "resolutionRequestType",
            "type": "OrderDispute.ResolutionRequestTypeEnum"
        },
        {
            "name": "resolutionRequestAt",
            "baseName": "resolutionRequestAt",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return OrderDispute.attributeTypeMap;
    }
}

export namespace OrderDispute {
    export enum StatusEnum {
        Open = <any> 'OPEN',
        Refund = <any> 'REFUND',
        Resolved = <any> 'RESOLVED'
    }
    export enum ResolutionRequestTypeEnum {
        Refund = <any> 'REQUEST_REFUND',
        Conciliated = <any> 'REQUEST_CONCILIATED'
    }
}
