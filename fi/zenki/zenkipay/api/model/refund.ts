/**
 * Zenkipay API
 * Definition of technical specification of the product; Zenkipay is a gateway cryptocurrency payment system that allows merchant\'s to receive payments on their e-commerce portals. Unlike other platforms, Zenkipay ensures customer satisfaction through its payment process. guarantee deposit (delivered product and expected quality) to settle payment to the merchant, thus avoiding the loss of client assets due to online scams.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@zenki.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CryptoPayment } from './cryptoPayment';
import { RefundFiatOriginalPayment } from './refundFiatOriginalPayment';

/**
* Registered refund detail.
*/
export class Refund {
    /**
    * Unique identifier of the refund generated by Zenkipay.
    */
    'zenkiRefundId': string;
    /**
    * Reason or reason for the refund.
    */
    'reason': string;
    'fiatOriginalPayment'?: RefundFiatOriginalPayment;
    'cryptoPayment': CryptoPayment;
    /**
    * Estado del reembolso  Posibles valroes: * PENDING         - Waiting for the refund to be applied. * AWAITING_REFUND - A first confirmation has been received by the blockchain network, it is waiting to have the required confirmations. * REFUNDED        - The product or service has been refunded to the buyer. * FAILED          - A problem has arisen when making the refund.
    */
    'status': Refund.StatusEnum;
    /**
    * Date and time when the merchant sent the refund to Zenkipay, in milliseconds and UTC format.        The Unix epoch (or Unix time or POSIX time or Unix timestamp) is the number of seconds elapsed since January 1, 1970 (midnight UTC/GMT), not counting leap seconds (in ISO 8601: 1970-01-01T00: 00:00Z)
    */
    'placedAt': number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "zenkiRefundId",
            "baseName": "zenkiRefundId",
            "type": "string"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string"
        },
        {
            "name": "fiatOriginalPayment",
            "baseName": "fiatOriginalPayment",
            "type": "RefundFiatOriginalPayment"
        },
        {
            "name": "cryptoPayment",
            "baseName": "cryptoPayment",
            "type": "CryptoPayment"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Refund.StatusEnum"
        },
        {
            "name": "placedAt",
            "baseName": "placedAt",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Refund.attributeTypeMap;
    }
}

export namespace Refund {
    export enum StatusEnum {
        Pending = <any> 'PENDING',
        AwaitingRefund = <any> 'AWAITING_REFUND',
        Refunded = <any> 'REFUNDED',
        Failed = <any> 'FAILED'
    }
}
