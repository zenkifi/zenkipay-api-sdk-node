/**
 * Zenkipay API
 * Definition of technical specification of the product; Zenkipay is a gateway cryptocurrency payment system that allows merchant\'s to receive payments on their e-commerce portals. Unlike other platforms, Zenkipay ensures customer satisfaction through its payment process. guarantee deposit (delivered product and expected quality) to settle payment to the merchant, thus avoiding the loss of client assets due to online scams.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@zenki.fi
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Information about a product or service.
*/
export class Item {
    /**
    * Unique identifier of the product or service assigned by the merchant.
    */
    'externalId'?: string;
    /**
    * Total number of products or services of the order of the same type.
    */
    'quantity': number;
    /**
    * Unit price of the product or service.
    */
    'unitPrice': number;
    /**
    * Short name of the product or service.
    */
    'name': string;
    /**
    * Description of the product or service.
    */
    'description'?: string | null;
    /**
    * Indicates the model for the product delivery or service delivery.  Possible values: * WITH_CARRIER    - If a courier is going to be used for the shipment and delivery of the product or service. * WITHOUT_CARRIER - If a courier is not going to be used for the shipment and delivery of the product or service.
    */
    'type'?: Item.TypeEnum;
    /**
    * Product image URL (thumbnail).
    */
    'thumbnailUrl'?: string | null;
    /**
    * Complementary information of the product or service that is required to be reported or kept in the Zenkipay system.
    */
    'metadata'?: { [key: string]: string; } | null;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "externalId",
            "baseName": "externalId",
            "type": "string"
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number"
        },
        {
            "name": "unitPrice",
            "baseName": "unitPrice",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Item.TypeEnum"
        },
        {
            "name": "thumbnailUrl",
            "baseName": "thumbnailUrl",
            "type": "string"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }"
        }    ];

    static getAttributeTypeMap() {
        return Item.attributeTypeMap;
    }
}

export namespace Item {
    export enum TypeEnum {
        WithCarrier = <any> 'WITH_CARRIER',
        WithoutCarrier = <any> 'WITHOUT_CARRIER'
    }
}
